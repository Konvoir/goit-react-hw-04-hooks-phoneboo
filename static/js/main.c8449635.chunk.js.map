{"version":3,"sources":["components/FormInput/FormInput.module.css","components/Contacts/ContactList.module.css","components/Section/Section.module.css","components/Contacts/Filter.module.css","App.module.css","components/FormInput/FormInput.jsx","components/Section/Section.jsx","components/Contacts/ContactList.jsx","components/Contacts/Filter.jsx","App.js","index.js"],"names":["module","exports","FormInput","onSubmit","useState","name","setName","number","setNumber","handleInputChange","event","currentTarget","value","className","s","form","preventDefault","label","input","type","onChange","pattern","title","required","button","Section","children","container","ContactList","contacts","onDelete","list","map","id","item","text","onClick","Filter","App","setContacts","filter","setFilter","useEffect","localContacts","window","localStorage","getItem","parsedContacts","JSON","parse","firstRender","useRef","current","setItem","stringify","normalizedFilter","toLowerCase","filterContacts","contact","includes","sort","a","b","localeCompare","uuidv4","find","alert","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,yBAAyB,MAAQ,yBAAyB,OAAS,4B,iBCA5HD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,0BAA0B,OAAS,8B,mBCA9HD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,gBCAjED,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,iBCAxDD,EAAOC,QAAU,CAAC,UAAY,yB,6HCmEjBC,EAAY,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACvB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAoB,SAAAC,GACtB,MAAwBA,EAAMC,cAAtBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAETP,IACQ,SAATA,EAAmBC,EAAQM,GACd,WAATP,GAAqBG,EAAUI,KAW9C,OACW,mCACI,uBAAMC,UAAWC,IAAEC,KAAMZ,SAVhB,SAACO,GAClBA,EAAMM,iBAENb,EAAS,CAACE,OAAME,WACfD,EAAQ,IACRE,EAAU,KAKH,UACI,wBAAOK,UAAWC,IAAEG,MAApB,iBACI,uBAAOJ,UAAWC,IAAEI,MAChBC,KAAK,OACLd,KAAK,OACLO,MAAOP,EACPe,SAAUX,EACVY,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAIhB,wBAAOV,UAAWC,IAAEG,MAApB,mBACI,uBAAOJ,UAAWC,IAAEI,MAChBC,KAAK,MACLd,KAAK,SACLO,MAAOL,EACPa,SAAUX,EACVY,QAAQ,yFACRC,MAAM,olBACNC,UAAQ,OAIhB,wBAAQV,UAAWC,IAAEU,OAAQL,KAAK,SAAlC,+B,gBCjHPM,EAAU,SAAC,GAAyB,IAAvBH,EAAsB,EAAtBA,MAAOI,EAAe,EAAfA,SAC7B,OACI,sBAAKb,UAAWC,IAAEa,UAAlB,UACI,oBAAId,UAAWC,IAAEQ,MAAjB,SAAyBA,IACxBI,M,gBCHAE,EAAc,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACpC,OACI,oBAAIjB,UAAWC,IAAEiB,KAAjB,SACKF,EAASG,KAAI,gBAAGC,EAAH,EAAGA,GAAI5B,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACV,qBAAIM,UAAWC,IAAEoB,KAAjB,UACI,uBAAMrB,UAAWC,IAAEqB,KAAnB,UAA0B9B,EAA1B,QACA,sBAAMQ,UAAWC,IAAEqB,KAAnB,SAA0B5B,IAC1B,wBAAQM,UAAWC,IAAEU,OACjBY,QAAS,WAAQN,EAASG,IAD9B,uBAHwBA,S,gBCJ/BI,EAAS,SAAC,GAAyB,IAAvBzB,EAAsB,EAAtBA,MAAOQ,EAAe,EAAfA,SAC5B,OACI,wBAAOP,UAAWC,IAAEG,MAApB,qCAEI,uBAAOJ,UAAWC,IAAEI,MAChBC,KAAK,OACLP,MAAOA,EACPQ,SAAUA,Q,iBCsEXkB,EAxEH,WACV,MAAgClC,mBAAS,CACrC,CAAE6B,GAAI,OAAQ5B,KAAM,gBAAiBE,OAAQ,aAC7C,CAAE0B,GAAI,OAAQ5B,KAAM,iBAAkBE,OAAQ,aAC9C,CAAE0B,GAAI,OAAQ5B,KAAM,gBAAiBE,OAAQ,aAC7C,CAAE0B,GAAI,OAAQ5B,KAAM,iBAAkBE,OAAQ,eAJlD,mBAAOsB,EAAP,KAAiBU,EAAjB,KAOA,EAA4BnC,mBAAS,IAArC,mBAAOoC,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACR,IAAMC,EAAgBC,OAAOC,aAAaC,QAAQ,YAC5CC,EAAiBC,KAAKC,MAAMN,GAC9BI,GAAkBR,EAAYQ,KACjC,IAEH,IAAMG,EAAcC,kBAAO,GAE3BT,qBAAU,WACJQ,EAAYE,QACdF,EAAYE,SAAU,EAGxBR,OAAOC,aAAaQ,QAAQ,WAAYL,KAAKM,UAAUzB,MACtD,CAACA,IAEJ,IAqBQ0B,EAAmBf,EAAOgB,cAC1BC,EAAiB5B,EAASW,QAAO,SAACkB,GAAD,OACrCA,EAAQrD,KAAKmD,cAAcG,SAASJ,MACnCK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAExD,KAAK0D,cAAcD,EAAEzD,SAG3C,OACE,qCACI,cAAC,EAAD,CAASiB,MAAO,YAAhB,SACE,cAAC,EAAD,CAAWnB,SA9BC,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACrBmD,EAAU,CACdzB,GAAI+B,cACJ3D,OACAE,UAEFsB,EAASoC,MAAK,SAACP,GAAD,OAAaA,EAAQrD,OAASA,KACxC6D,MAAM,GAAD,OAAI7D,EAAJ,4BACLwB,EAASoC,MAAK,SAACP,GAAD,OAAaA,EAAQnD,SAAWA,KAC5C2D,MAAM,GAAD,OAAI3D,EAAJ,6BACLgC,EAAW,CAAGmB,GAAH,mBAAe7B,UAuB5B,cAAC,EAAD,CAASP,MAAO,WAAhB,SACE,sBAAKT,UAAWC,IAAEa,UAAlB,UACE,cAAC,EAAD,CAAQf,MAAO4B,EAAQpB,SAlBV,SAAC+C,GACtB1B,EAAW0B,EAAEC,OAAOxD,UAkBZ,cAAC,EAAD,CAAaiB,SAAU4B,EACrB3B,SAxBY,SAACG,GACtBM,EAAYV,EAASW,QAAO,SAACkB,GAAD,OAAaA,EAAQzB,KAAOA,kBC3C7DoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c8449635.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormInput_form__28y3z\",\"label\":\"FormInput_label__3enjD\",\"input\":\"FormInput_input__3rqyk\",\"button\":\"FormInput_button__Zuq97\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3u2nA\",\"item\":\"ContactList_item__254D3\",\"text\":\"ContactList_text__1I8Xp\",\"button\":\"ContactList_button__1dBOa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__21Jtl\",\"title\":\"Section_title__9wERp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3dJBF\",\"input\":\"Filter_input__3WF58\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__Szgr1\"};","// import React, { Component } from 'react';\r\n// import s from \"./FormInput.module.css\"\r\n\r\n// export class FormInput extends Component {\r\n//     state = {\r\n//     name: \"\",\r\n//     number: \"\",\r\n//     };\r\n\r\n//     reset = () => {\r\n//         this.setState({\r\n//             name: \"\",\r\n//             number: \"\",\r\n//         });\r\n//     };\r\n   \r\n//     handleInputChange = event => {\r\n//         this.setState({ [event.target.name]: event.currentTarget.value });\r\n//     };\r\n\r\n//     handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n//         this.props.onSubmit(this.state);\r\n//         this.reset();\r\n//     };\r\n   \r\n\r\n//     render() {\r\n//         const { name, number} = this.state\r\n//         return (\r\n//             <>\r\n//                 <form className={s.form} onSubmit={this.handleSubmit}>\r\n//                     <label className={s.label}>Name\r\n//                         <input className={s.input}\r\n//                             type=\"text\"\r\n//                             name=\"name\"\r\n//                             value={name}\r\n//                             onChange={this.handleInputChange}\r\n//                             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//                             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//                             required\r\n//                         />\r\n//                     </label>\r\n\r\n//                     <label className={s.label}>Number\r\n//                         <input className={s.input}\r\n//                             type=\"tel\"\r\n//                             name=\"number\"\r\n//                             value={number}\r\n//                             onChange={this.handleInputChange}\r\n//                             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//                             title=\"Номер телефона должен состоять минимум из 5 цифр и может содержать пробелы, тире, круглые скобки, может начинаться с +\"\r\n//                             required\r\n//                         />\r\n//                     </label>\r\n\r\n//                     <button className={s.button} type=\"submit\">Add contact</button>\r\n\r\n//                 </form>\r\n                \r\n//             </>\r\n//         );\r\n//     }\r\n// }\r\n\r\nimport { useState} from 'react';\r\nimport s from \"./FormInput.module.css\";\r\n\r\nexport const FormInput = ({onSubmit}) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [number, setNumber] = useState(\"\");\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.currentTarget;\r\n        \r\n        if (!name) {return}\r\n        if (name === 'name') { setName(value) }\r\n        else if(name === 'number') { setNumber(value) }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        onSubmit({name, number});\r\n         setName('');\r\n         setNumber('');\r\n    };\r\n\r\n return (\r\n            <>\r\n                <form className={s.form} onSubmit={handleSubmit}>\r\n                    <label className={s.label}>Name\r\n                        <input className={s.input}\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            onChange={handleInputChange}\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                        />\r\n                    </label>\r\n\r\n                    <label className={s.label}>Number\r\n                        <input className={s.input}\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            value={number}\r\n                            onChange={handleInputChange}\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять минимум из 5 цифр и может содержать пробелы, тире, круглые скобки, может начинаться с +\"\r\n                            required\r\n                        />\r\n                    </label>\r\n\r\n                    <button className={s.button} type=\"submit\">Add contact</button>\r\n\r\n                </form>\r\n                \r\n            </>\r\n    );\r\n}","import s from \"./Section.module.css\";\r\n\r\nexport const Section = ({ title, children }) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <h2 className={s.title}>{title}</h2>\r\n            {children}\r\n        </div>\r\n    );\r\n};","import PropTypes from 'prop-types';\r\nimport s from \"./ContactList.module.css\"\r\n\r\nexport const ContactList = ({ contacts, onDelete }) => {\r\n    return (\r\n        <ul className={s.list}>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <li className={s.item} key={id}>\r\n                    <span className={s.text}>{name} :</span>\r\n                    <span className={s.text}>{number}</span>\r\n                    <button className={s.button}\r\n                        onClick={() => { onDelete(id) }}\r\n                    > Delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape).isRequired\r\n};","import PropTypes from 'prop-types';\r\nimport s from \"./Filter.module.css\";\r\n\r\nexport const Filter = ({ value, onChange }) => {\r\n    return (\r\n        <label className={s.label}>\r\n            Filter contacts by input\r\n            <input className={s.input}\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n        </label>\r\n    );\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};","import { useState, useEffect, useRef } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { FormInput } from \"./components/FormInput/FormInput\";\nimport { Section } from \"./components/Section/Section\";\nimport { ContactList } from \"./components/Contacts/ContactList\";\nimport { Filter } from \"./components/Contacts/Filter\";\nimport s from \"./App.module.css\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ]);\n  \n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const localContacts = window.localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(localContacts);\n    if (parsedContacts) { setContacts(parsedContacts) };\n  }, []);\n\n  const firstRender = useRef(true);\n\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    }\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts))\n  }, [contacts]);\n\n  const  addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    contacts.find((contact) => contact.name === name)\n      ? alert(`${name} is already in contacts`)\n      : contacts.find((contact) => contact.number === number)\n        ? alert(`${number} is  already in contacts`)\n        : setContacts ([contact, ...contacts])\n    };\n\n    const deleteContact = (id) => {\n     setContacts(contacts.filter((contact) => contact.id !== id))\n    };\n  \n    const changeFilter = (e) => {\n    setFilter( e.target.value)\n   };\n    \n    const normalizedFilter = filter.toLowerCase();\n    const filterContacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter))\n      .sort((a, b) => a.name.localeCompare(b.name));\n  \n\n  return (\n    <>\n        <Section title={\"Phonebook\"}>\n          <FormInput onSubmit={addContact} />\n        </Section>\n        \n        <Section title={\"Contacts\"}>\n          <div className={s.container}>\n            <Filter value={filter} onChange={changeFilter} />\n            <ContactList contacts={filterContacts}\n              onDelete={deleteContact}\n            />\n          </div>\n        </Section>\n    </>\n    );\n\n}\n\nexport default App;\n\n\n\n\n\n\n// import React, { Component } from \"react\";\n// import { v4 as uuidv4 } from 'uuid';\n// import { FormInput } from \"./components/FormInput/FormInput\";\n// import { Section } from \"./components/Section/Section\";\n// import { ContactList } from \"./components/Contacts/ContactList\";\n// import { Filter } from \"./components/Contacts/Filter\";\n// import s from \"./App.module.css\";\n\n// export class App extends Component {\n \n//   state = {\n//     contacts: [\n//       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//     ],\n//     filter: \"\",\n//   };\n\n//   addContact = ({ name, number }) => {\n//     const { contacts } = this.state;\n//     const contact = {\n//       id: uuidv4(),\n//       name,\n//       number,\n//     };\n//     contacts.find((contact) => contact.name === name)\n//       ? alert(`${name} is already in contacts`)\n//       : contacts.find((contact) => contact.number === number)\n//         ? alert(`${number} is  already in contacts`)\n//         : this.setState(({ contacts }) => ({\n//           contacts: [contact, ...contacts]\n//         }));\n//   };\n\n//   deleteContact = (id) => {\n//     this.setState((prevState) => ({\n//       contacts: prevState.contacts.filter(\n//         (contact) => contact.id !== id\n//       ),\n//     }));\n//   };\n\n//   changeFilter = (e) => {\n//     this.setState({ filter: e.target.value });\n//   };\n \n//   filterContacts = () => {\n//     const { contacts, filter } = this.state;\n//     const normalizedFilter = filter.toLowerCase();\n//     return contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(normalizedFilter))\n//       .sort((a, b) => a.name.localeCompare(b.name));\n//   };\n\n//   componentDidMount() {\n//     const localContacts = localStorage.getItem(\"contacts\");\n//     const parsedContacts = JSON.parse(localContacts);\n//     if (parsedContacts) {\n//       this.setState({\n//         contacts: parsedContacts,\n//       })\n//     }\n//   }\n  \n//   componentDidUpdate(prevProps, prevState) {\n//     const { contacts } = this.state;\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(contacts))      \n//     }\n//   }\n\n//   render() {\n//     const { filter } = this.state;\n//     const visibilityContacts = this.filterContacts();\n//     return (\n//     <>\n//         <Section title={\"Phonebook\"}>\n//           <FormInput onSubmit={this.addContact} />\n//         </Section>\n        \n//         <Section title={\"Contacts\"}>\n//           <div className={s.container}>\n//             <Filter value={filter} onChange={this.changeFilter} />\n//             <ContactList contacts={visibilityContacts}\n//               onDelete={this.deleteContact}\n//             />\n//           </div>\n//         </Section>\n//     </>\n//     );\n//   }\n// }\n\n// export default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}